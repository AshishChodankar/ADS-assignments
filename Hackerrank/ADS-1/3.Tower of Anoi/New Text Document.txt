/*
Tower of Hanoi is a mathematical puzzle where we have three rods and n disks. The objective of the puzzle is to move all disks from source rod to destination rod using the third rod (say auxiliary). The rules are:

Only one disk can be moved at a time.
A disk can be moved only if it is on the top of a rod.
No disk can be placed on the top of a smaller disk.
Print the steps required to move n disks from source rod to destination rod. Source Rod is named as 'a', auxiliary rod as 'b' and destination rod as 'c'.

Sample Input 0

2
Sample Output 0

Disk 1 moved from A to B
Disk 2 moved from A to C
Disk 1 moved from B to C
Sample Input 1

3
Sample Output 1

Disk 1 moved from A to C
Disk 2 moved from A to B
Disk 1 moved from C to B
Disk 3 moved from A to C
Disk 1 moved from B to A
Disk 2 moved from B to C
Disk 1 moved from A to C

*/
import java.io.*;
import java.util.*;

public class Solution {
    public static void toh(int n,char A,char B,char C)
    {
       if(n>0)
       {
        toh(n-1,A,C,B);
        System.out.println("Disk "+n+" moved from "+""+A+" to "+C);
        toh(n-1,B,A,C);
        }
    }
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        toh(n,'A','B','C');
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
    }
}