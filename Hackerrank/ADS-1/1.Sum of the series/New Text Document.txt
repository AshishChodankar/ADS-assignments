/*
Recursive program to find the Sum of the series 1 – 1/2 + 1/3 – 1/4 … 1/N Given a positive integer N, the task is to find the sum of the series 1 – (1/2) + (1/3) – (1/4) +…. (1/N) using recursion.

Input Format

Input: N = 3

Constraints

Nis a natural number.

Output Format

Output: 0.8333333 Explanation: 1 – (1/2) + (1/3) = 0.8333333

Sample Input 0

3 
Sample Output 0

0.8333333730697632
*/
import java.io.*;
import java.util.*;


public class Solution {
static float i;
static int n;
static float sum;
static float addition(float i,int n,float sum)
{
    if(i>n)
        return sum;
    else
        {
            if(i%2==0)
            {
                sum=sum-((float)1/i);
                i++;
                return addition(i,n,sum);
            }
            else
            {
                sum=sum+((float)1/i);
                i++;
                return addition(i,n,sum);
            }
            
        }
}
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        float res= addition(1,n,0);
        System.out.printf("%6f",res);

            /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
    }
}